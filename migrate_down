
# COMMAND -> provide your own command if project requires other Doctrine syntax ($migration_version must be used as verision indicator)
# MIGRATION_PATH -> describes path to the migration folder from current directory
# -c -> Add as second argument to checkout to the branch

COMMAND='bin/console d:m:e "DoctrineMigrations\\$migration_version" --down --no-interaction'
MIGRATION_PATH="./migrations"

function line_exit {
  echo
  exit
}

function display_branches {
  echo "Available branches are: "
  echo "$(git branch)"
  line_exit
}

echo

if [ ! -d .git ]; then
  echo "Not a git repository!"
  line_exit
fi


if [ ! -d "$MIGRATION_PATH" ]; then
  echo "Migrations directory not found!"
  line_exit
fi

current_branch=$(git branch | grep "*" | sed "s/\* //")

target_branch=$1

if [ -z "$1" ]; then
    echo "No target branch provided"
    display_branches
fi

if [ "$target_branch" == "$current_branch" ]; then
    echo "Cannot downgrade current branch!"
    display_branches
fi


if ! git show-ref --quiet "refs/heads/${1}"; then
    echo "Branch named: '${1}' does not exist"
    display_branches
fi

migrations="$(git diff --name-only --diff-filter=D $current_branch..$target_branch migrations)"

if [ -z "$migrations" ]
then
    echo "Migrations are up to date with target branch"
    line_exit
fi

echo "Files to be migrated:"
echo "$migrations"
echo

while true; do
    read -p "Do you want to run down listed migrations? (y/n) " yn
    echo "$yn"
    case $yn in
	[nN] )  echo "(n) Aborting...";
                line_exit;;
        [yY]|"" ) echo "(y) Migrating down...";
            git diff --name-only --diff-filter=D $current_branch..$target_branch migrations | sort -r | while read migration; do
                [[ $migration =~ (Version[0-9]+) ]]

                migration_version=${BASH_REMATCH[0]}

                echo "Migrating down: $migration_version"
		
		eval "$COMMAND"
            done
	    echo
            echo Migrated down successfully
            echo
	    break;;
        * ) echo invalid response;;
    esac
done

if [[ "$2" == "-c" ]]
then
    git checkout $target_branch
fi
line_exit
